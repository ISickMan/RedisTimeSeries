{
    "TS.CREATE": {
        "summary": "Create a new time-series",
        "complexity": "O(1)",
        "arguments": [
            {
            "name": "key",
            "type": "key"
            },
            {
            "type": "integer",
            "token": "RETENTION",
            "name": "retentionTime",
            "optional": true
            },
            {
            "name": "encoding",
            "token": "ENCODING",
            "type": "oneof",
            "arguments": [
                {
                    "name": "uncompressed",
                    "pure-token": "UNCOMPRESSED"
                },
                {
                    "name": "compressed",
                    "pure-token": "COMPRESSED"
                }
            ],
            "optional": true
            },
            {
            "type": "integer",
            "token": "CHUNK_SIZE",
            "name": "size",
            "optional": true
            },
            {
            "type": "oneof",
            "token": "DUPLICATE_POLICY",
            "name": "policy",
            "arguments": [
                {
                    "name": "block",
                    "pure-token": "block"
                },
                {
                    "name": "first",
                    "pure-token": "first"
                },
                {
                    "name": "last",
                    "pure-token": "last"
                },
                {
                    "name": "min",
                    "pure-token": "min"
                },
                {
                    "name": "max",
                    "pure-token": "max"
                },
                {
                    "name": "sum",
                    "pure-token": "sum"
                }
            ],
            "optional": true
            },
            {
                "type": "block",
                "name": "labels",
                "token": "LABELS",
                "optional": true,
                "multiple": true,
                "arguments": [
                    {
                        "type": "string",
                        "name": "label"
                    },
                    {
                        "type": "string",
                        "name": "value"
                    }
                ]
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.DEL": {
        "summary": "Delete samples between two timestamps for a given key",
        "complexity": "O(N) where N is the number of data points that will be removed",
        "arguments": [{
                "name": "key",
                "type": "key"
            },
            {
                "name": "from_timestamp",
                "type": "integer"
            },
            {
                "name": "to_timestamp",
                "type": "integer"
            }
        ],
        "since": "1.6.0",
        "group": "timeseries"
    },
    "TS.ALTER": {
        "summary": "Update the retention, labels of an existing key",
        "complexity": "O(N) where N is the number of labels requested to update",
        "arguments": [{
                "name": "key",
                "type": "key"
            },
            {
                "type": "integer",
                "token": "RETENTION",
                "name": "retentionTime",
                "optional": true
            },
            {
                "type": "integer",
                "token": "CHUNK_SIZE",
                "name": "size",
                "optional": true
            },
            {
                "type": "oneof",
                "token": "DUPLICATE_POLICY",
                "name": "policy",
                "arguments": [
                    {
                        "name": "block",
                        "pure-token": "block"
                    },
                    {
                        "name": "first",
                        "pure-token": "first"
                    },
                    {
                        "name": "last",
                        "pure-token": "last"
                    },
                    {
                        "name": "min",
                        "pure-token": "min"
                    },
                    {
                        "name": "max",
                        "pure-token": "max"
                    },
                    {
                        "name": "sum",
                        "pure-token": "sum"
                    }
                ],
                "optional": true
            },
            {
                "type": "block",
                "name": "labels",
                "token": "LABELS",
                "optional": true,
                "multiple": true,
                "arguments": [
                    {
                        "type": "string",
                        "name": "label"
                    },
                    {
                        "type": "string",
                        "name": "value"
                    }
                ]
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.ADD": {
        "summary": "Append a new sample to the series. If the series has not been created yet with TS.CREATE it will be automatically created.",
        "complexity": "O(M) when M is the amount of compaction rules or O(1) with no compaction",
        "arguments": [{
                "name": "key",
                "type": "key"
            },
            {
                "name": "timestamp",
                "type": "integer"
            },
            {
                "name": "value",
                "type": "double"
            },
            {
                "type": "integer",
                "token": "RETENTION",
                "name": "retentionTime",
                "optional": true
            },
            {
                "name": "encoding",
                "token": "ENCODING",
                "type": "oneof",
                "arguments": [
                    {
                        "name": "uncompressed",
                        "pure-token": "UNCOMPRESSED"
                    },
                    {
                        "name": "compressed",
                        "pure-token": "COMPRESSED"
                    }
                ],
                "optional": true
            },
            {
                "type": "integer",
                "token": "CHUNK_SIZE",
                "name": "size",
                "optional": true
            },
            {
                "type": "oneof",
                "token": "DUPLICATE_POLICY",
                "name": "policy",
                "arguments": [
                    {
                        "name": "block",
                        "pure-token": "block"
                    },
                    {
                        "name": "first",
                        "pure-token": "first"
                    },
                    {
                        "name": "last",
                        "pure-token": "last"
                    },
                    {
                        "name": "min",
                        "pure-token": "min"
                    },
                    {
                        "name": "max",
                        "pure-token": "max"
                    },
                    {
                        "name": "sum",
                        "pure-token": "sum"
                    }
                ],
                "optional": true
            },
            {
                "type": "block",
                "name": "labels",
                "token": "LABELS",
                "optional": true,
                "multiple": true,
                "arguments": [
                    {
                        "type": "string",
                        "name": "label"
                    },
                    {
                        "type": "string",
                        "name": "value"
                    }
                ]
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.MADD": {
        "summary": "Append new samples to a list of series",
        "complexity": "O(N*M) when N is the amount of series updated and M is the amount of compaction rules or O(N) with no compaction",
        "arguments": [
            {
                "type": "block",
                "name": "ktv",
                "multiple": true,
                "arguments": [
                    {
                        "type": "key",
                        "name": "key"
                    },
                    {
                        "type": "integer",
                        "name": "timestamp"
                    },
                    {
                        "type": "double",
                        "name": "value"
                    }
                ]
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.INCRBY": {
        "summary": "Creates a new sample that increments the latest sample's value",
        "complexity": "O(M) when M is the amount of compaction rules or O(1) with no compaction",
        "arguments": [
            {
            "name": "key",
            "type": "key"
            },
            {
            "name": "value",
            "type": "double"
            },
            {
                "name": "timestamp",
                "type": "integer",
                "optional": true
            },            
            {
            "type": "integer",
            "token": "RETENTION",
            "name": "retentionTime",
            "optional": true
            },
            {
                "name": "uncompressed",
                "pure-token": "UNCOMPRESSED",
                "optional": true
            },
            {
            "type": "integer",
            "token": "CHUNK_SIZE",
            "name": "size",
            "optional": true
            },
            {
                "type": "block",
                "name": "labels",
                "token": "LABELS",
                "optional": true,
                "multiple": true,
                "arguments": [
                    {
                        "type": "string",
                        "name": "label"
                    },
                    {
                        "type": "string",
                        "name": "value"
                    }
                ]
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.DECRBY": {
        "summary": "Creates a new sample that decrements the latest sample's value",
        "complexity": "O(M) when M is the amount of compaction rules or O(1) with no compaction",
        "arguments": [
            {
            "name": "key",
            "type": "key"
            },
            {
            "name": "value",
            "type": "double"
            },
            {
                "name": "timestamp",
                "type": "integer",
                "optional": true
            },
            {
            "type": "integer",
            "token": "RETENTION",
            "name": "retentionTime",
            "optional": true
            },
            {
            "name": "uncompressed",
            "pure-token": "UNCOMPRESSED",
            "optional": true
            },
            {
            "type": "integer",
            "token": "CHUNK_SIZE",
            "name": "size",
            "optional": true
            },
            {
                "type": "block",
                "name": "labels",
                "token": "LABELS",
                "optional": true,
                "multiple": true,
                "arguments": [
                    {
                        "type": "string",
                        "name": "label"
                    },
                    {
                        "type": "string",
                        "name": "value"
                    }
                ]
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.CREATERULE": {
        "summary": "Create a compaction rule",
        "complexity": "O(1)",
        "arguments": [{
                "name": "sourceKey",
                "type": "key"
            },
            {
                "name": "destKey",
                "type": "key"
            },
            {
                "type": "oneof",
                "token": "AGGREGATION",
                "name": "aggregationType",
                "arguments": [
                    {
                        "name": "avg",
                        "pure-token": "avg"
                    },
                    {
                        "name": "first",
                        "pure-token": "first"
                    },
                    {
                        "name": "last",
                        "pure-token": "last"
                    },
                    {
                        "name": "min",
                        "pure-token": "min"
                    },
                    {
                        "name": "max",
                        "pure-token": "max"
                    },
                    {
                        "name": "sum",
                        "pure-token": "sum"
                    },
                    {
                        "name": "range",
                        "pure-token": "range"
                    },
                    {
                        "name": "count",
                        "pure-token": "count"
                    },
                    {
                        "name": "std.p",
                        "pure-token": "std.p"
                    },
                    {
                        "name": "std.s",
                        "pure-token": "std.s"
                    },
                    {
                        "name": "var.p",
                        "pure-token": "var.p"
                    },
                    {
                        "name": "var.s",
                        "pure-token": "var.s"
                    }
                ],
                "optional": true
            },
            {
                "name": "timeBucket",
                "type": "integer"
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.DELETERULE": {
        "summary": "Delete a compaction rule",
        "complexity": "O(1)",
        "arguments": [{
                "name": "sourceKey",
                "type": "key"
            },
            {
                "name": "destKey",
                "type": "key"
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.RANGE": {
        "summary": "Query a range in forward direction",
        "complexity": "O(n/m+k) where n = Number of data points, m = Chunk size (data points per chunk), k = Number of data points that are in the requested range",
        "arguments": [{
                "name": "key",
                "type": "key"
            },
            {
                "name": "fromTimestamp",
                "type": "integer"
            },
            {
                "name": "toTimestamp",
                "type": "integer"
            },
            {
                "token": "FILTER_BY_TS",
                "name": "Timestamp",
                "type": "integer",
                "multiple": true,
                "optional": true
            },
            {
                "type": "block",
                "name": "fbv",
                "optional": true,
                "arguments": [
                    {
                        "name": "FILTER_BY_VALUE",
                        "pure-token": "FILTER_BY_VALUE"
                    },
                    {
                        "type": "double",
                        "name": "min"
                    },
                    {
                        "type": "double",
                        "name": "max"
                    }
                ]
            },
            {
                "token": "COUNT",
                "name": "count",
                "type": "integer",
                "optional": true
            },
            {
                "token": "ALIGN",
                "name": "value",
                "type": "integer",
                "optional": true
            },
            {
                "name": "aggregation",
                "type": "block",
                "optional": true,
                "arguments": [
                    {
                        "type": "oneof",
                        "token": "AGGREGATION",
                        "name": "aggregationType",
                        "arguments": [
                            {
                                "name": "avg",
                                "pure-token": "avg"
                            },
                            {
                                "name": "first",
                                "pure-token": "first"
                            },
                            {
                                "name": "last",
                                "pure-token": "last"
                            },
                            {
                                "name": "min",
                                "pure-token": "min"
                            },
                            {
                                "name": "max",
                                "pure-token": "max"
                            },
                            {
                                "name": "sum",
                                "pure-token": "sum"
                            },
                            {
                                "name": "range",
                                "pure-token": "range"
                            },
                            {
                                "name": "count",
                                "pure-token": "count"
                            },
                            {
                                "name": "std.p",
                                "pure-token": "std.p"
                            },
                            {
                                "name": "std.s",
                                "pure-token": "std.s"
                            },
                            {
                                "name": "var.p",
                                "pure-token": "var.p"
                            },
                            {
                                "name": "var.s",
                                "pure-token": "var.s"
                            }
                        ]
                    },
                    {
                    "name": "timeBucket",
                    "type": "integer"
                    }
                ]
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.REVRANGE": {
        "summary": "Query a range in reverse direction",
        "complexity": "O(n/m+k) where n = Number of data points, m = Chunk size (data points per chunk), k = Number of data points that are in the requested range",
        "arguments": [{
                "name": "key",
                "type": "key"
            },
            {
                "name": "fromTimestamp",
                "type": "integer"
            },
            {
                "name": "toTimestamp",
                "type": "integer"
            },
            {
                "token": "FILTER_BY_TS",
                "name": "Timestamp",
                "type": "integer",
                "multiple": true,
                "optional": true
            },
            {
                "type": "block",
                "name": "fbv",
                "optional": true,
                "arguments": [
                    {
                        "name": "FILTER_BY_VALUE",
                        "pure-token": "FILTER_BY_VALUE"
                    },
                    {
                        "type": "double",
                        "name": "min"
                    },
                    {
                        "type": "double",
                        "name": "max"
                    }
                ]
            },
            {
                "token": "COUNT",
                "name": "count",
                "type": "integer",
                "optional": true
            },
            {
                "token": "ALIGN",
                "name": "value",
                "type": "integer",
                "optional": true
            },
            {
                "name": "aggregation",
                "type": "block",
                "optional": true,
                "arguments": [
                    {
                        "type": "oneof",
                        "token": "AGGREGATION",
                        "name": "aggregationType",
                        "arguments": [
                            {
                                "name": "avg",
                                "pure-token": "avg"
                            },
                            {
                                "name": "first",
                                "pure-token": "first"
                            },
                            {
                                "name": "last",
                                "pure-token": "last"
                            },
                            {
                                "name": "min",
                                "pure-token": "min"
                            },
                            {
                                "name": "max",
                                "pure-token": "max"
                            },
                            {
                                "name": "sum",
                                "pure-token": "sum"
                            },
                            {
                                "name": "range",
                                "pure-token": "range"
                            },
                            {
                                "name": "count",
                                "pure-token": "count"
                            },
                            {
                                "name": "std.p",
                                "pure-token": "std.p"
                            },
                            {
                                "name": "std.s",
                                "pure-token": "STD.S"
                            },
                            {
                                "name": "var.p",
                                "pure-token": "var.p"
                            },
                            {
                                "name": "var.s",
                                "pure-token": "var.s"
                            }
                        ]
                    },
                    {
                    "name": "timeBucket",
                    "type": "integer"
                    }
                ]
            }
        ],
        "since": "1.4.0",
        "group": "timeseries"
    },
    "TS.MRANGE": {
        "summary": "Query a range across multiple time-series by filters in forward direction",
        "complexity": "O(n/m+k) where n = Number of data points, m = Chunk size (data points per chunk), k = Number of data points that are in the requested ranges",
        "arguments": [{
                "name": "key",
                "type": "key"
            },
            {
                "name": "fromTimestamp",
                "type": "integer"
            },
            {
                "name": "toTimestamp",
                "type": "integer"
            },
            {
                "token": "FILTER_BY_TS",
                "name": "Timestamp",
                "type": "integer",
                "multiple": true,
                "optional": true
            },
            {
                "type": "block",
                "name": "fbv",
                "optional": true,
                "arguments": [
                    {
                        "name": "FILTER_BY_VALUE",
                        "pure-token": "FILTER_BY_VALUE"
                    },
                    {
                        "type": "double",
                        "name": "min"
                    },
                    {
                        "type": "double",
                        "name": "max"
                    }
                ]
            },
            {
                "type": "oneof",
                "arguments": [
                    {
                        "name": "WITHLABELS",
                        "pure-token": "WITHLABELS"
                    },
                    {
                        "name": "SELECTED_LABELS label1 ...",
                        "pure-token": "SELECTED_LABELS label1 ..."
                    }
                ],
                "optional": true
            },
            {
                "token": "COUNT",
                "name": "count",
                "type": "integer",
                "optional": true
            },
            {
                "token": "ALIGN",
                "name": "value",
                "type": "integer",
                "optional": true
            },
            {
                "name": "aggregation",
                "type": "block",
                "optional": true,
                "arguments": [
                    {
                        "type": "oneof",
                        "token": "AGGREGATION",
                        "name": "aggregationType",
                        "arguments": [
                            {
                                "name": "avg",
                                "pure-token": "avg"
                            },
                            {
                                "name": "first",
                                "pure-token": "first"
                            },
                            {
                                "name": "last",
                                "pure-token": "last"
                            },
                            {
                                "name": "min",
                                "pure-token": "min"
                            },
                            {
                                "name": "max",
                                "pure-token": "max"
                            },
                            {
                                "name": "sum",
                                "pure-token": "sum"
                            },
                            {
                                "name": "range",
                                "pure-token": "range"
                            },
                            {
                                "name": "count",
                                "pure-token": "count"
                            },
                            {
                                "name": "std.p",
                                "pure-token": "std.p"
                            },
                            {
                                "name": "std.s",
                                "pure-token": "std.s"
                            },
                            {
                                "name": "var.p",
                                "pure-token": "var.p"
                            },
                            {
                                "name": "var.s",
                                "pure-token": "var.s"
                            }
                        ]
                    },
                    {
                    "name": "timeBucket",
                    "type": "integer"
                    }
                ]
            },
            {
                "token": "FILTER",
                "type": "oneof",
                "arguments": [
                    {
                        "name": "l=v",
                        "pure-token": "l=v"
                    },
                    {
                        "name": "l!=v",
                        "pure-token": "l!=v"
                    },
                    {
                        "name": "l=",
                        "pure-token": "l="
                    },
                    {
                        "name": "l!=",
                        "pure-token": "l!="
                    },
                    {
                        "name": "l=(v1,v2,...)",
                        "pure-token": "l=(v1,v2,...)"
                    },
                    {
                        "name": "l!=(v1,v2,...)",
                        "pure-token": "l!=(v1,v2,...)"
                    }
                ],
                "multiple": true
            },
            {
                "type": "block",
                "name": "groupby",
                "optional": true,
                "arguments": [
                    {
                        "name": "GROUPBY",
                        "pure-token": "GROUPBY"
                    },
                    {
                        "type": "string",
                        "name": "label"
                    },
                    {
                        "type": "string",
                        "name": "REDUCE"
                    },
                    {
                        "type": "string",
                        "name": "reducer"
                    }
                ]
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.MREVRANGE": {
        "summary": "Query a range across multiple time-series by filters in reverse direction",
        "complexity": "O(n/m+k) where n = Number of data points, m = Chunk size (data points per chunk), k = Number of data points that are in the requested ranges",
        "arguments": [{
                "name": "key",
                "type": "key"
            },
            {
                "name": "fromTimestamp",
                "type": "integer"
            },
            {
                "name": "toTimestamp",
                "type": "integer"
            },
            {
                "token": "FILTER_BY_TS",
                "name": "Timestamp",
                "type": "integer",
                "multiple": true,
                "optional": true
            },
            {
                "type": "block",
                "name": "fbv",
                "optional": true,
                "arguments": [
                    {
                        "name": "FILTER_BY_VALUE",
                        "pure-token": "FILTER_BY_VALUE"
                    },
                    {
                        "type": "double",
                        "name": "min"
                    },
                    {
                        "type": "double",
                        "name": "max"
                    }
                ]
            },
            {
                "type": "oneof",
                "arguments": [
                    {
                        "name": "WITHLABELS",
                        "pure-token": "WITHLABELS"
                    },
                    {
                        "name": "SELECTED_LABELS label1 ...",
                        "pure-token": "SELECTED_LABELS label1 ..."
                    }
                ],
                "optional": true
            },
            {
                "token": "COUNT",
                "name": "count",
                "type": "integer",
                "optional": true
            },
            {
                "token": "ALIGN",
                "name": "value",
                "type": "integer",
                "optional": true
            },
            {
                "name": "aggregation",
                "type": "block",
                "optional": true,
                "arguments": [
                    {
                        "type": "oneof",
                        "token": "AGGREGATION",
                        "name": "aggregationType",
                        "arguments": [
                            {
                                "name": "avg",
                                "pure-token": "avg"
                            },
                            {
                                "name": "first",
                                "pure-token": "first"
                            },
                            {
                                "name": "last",
                                "pure-token": "last"
                            },
                            {
                                "name": "min",
                                "pure-token": "min"
                            },
                            {
                                "name": "max",
                                "pure-token": "max"
                            },
                            {
                                "name": "sum",
                                "pure-token": "sum"
                            },
                            {
                                "name": "range",
                                "pure-token": "range"
                            },
                            {
                                "name": "count",
                                "pure-token": "count"
                            },
                            {
                                "name": "std.p",
                                "pure-token": "std.p"
                            },
                            {
                                "name": "std.s",
                                "pure-token": "std.s"
                            },
                            {
                                "name": "var.p",
                                "pure-token": "var.p"
                            },
                            {
                                "name": "var.s",
                                "pure-token": "var.s"
                            }
                        ]
                    },
                    {
                    "name": "timeBucket",
                    "type": "integer"
                    }
                ]
            },
            {
                "token": "FILTER",
                "type": "oneof",
                "arguments": [
                    {
                        "name": "l=v",
                        "pure-token": "l=v"
                    },
                    {
                        "name": "l!=v",
                        "pure-token": "l!=v"
                    },
                    {
                        "name": "l=",
                        "pure-token": "l="
                    },
                    {
                        "name": "l!=",
                        "pure-token": "l!="
                    },
                    {
                        "name": "l=(v1,v2,...)",
                        "pure-token": "l=(v1,v2,...)"
                    },
                    {
                        "name": "l!=(v1,v2,...)",
                        "pure-token": "l!=(v1,v2,...)"
                    }
                ],
                "multiple": true
            },
            {
                "type": "block",
                "name": "groupby",
                "optional": true,
                "arguments": [
                    {
                        "name": "GROUPBY",
                        "pure-token": "GROUPBY"
                    },
                    {
                        "type": "string",
                        "name": "label"
                    },
                    {
                        "type": "string",
                        "name": "REDUCE"
                    },
                    {
                        "type": "string",
                        "name": "reducer"
                    }
                ]
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.GET": {
        "summary": "Get the last sample",
        "complexity": "O(1)",
        "arguments": [{
                "name": "key",
                "type": "key"
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.MGET": {
        "summary": "Get the last samples matching the specific filter",
        "complexity": "O(n) where n is the number of time-series that match the filters",
        "arguments": [{
                "type": "oneof",
                "optional": true,
                "arguments": [
                    {
                        "name": "WITHLABELS",
                        "pure-token": "WITHLABELS"
                    },
                    {
                        "name": "SELECTED_LABELS label1 ...",
                        "pure-token": "SELECTED_LABELS label1 ..."
                    }
                ]
            },
            {
                "token": "FILTER",
                "type": "oneof",
                "arguments": [
                    {
                        "name": "l=v",
                        "pure-token": "l=v"
                    },
                    {
                        "name": "l!=v",
                        "pure-token": "l!=v"
                    },
                    {
                        "name": "l=",
                        "pure-token": "l="
                    },
                    {
                        "name": "l!=",
                        "pure-token": "l!="
                    },
                    {
                        "name": "l=(v1,v2,...)",
                        "pure-token": "l=(v1,v2,...)"
                    },
                    {
                        "name": "l!=(v1,v2,...)",
                        "pure-token": "l!=(v1,v2,...)"
                    }
                ],
                "multiple": true
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.INFO": {
        "summary": "Returns information and statistics on the time-series",
        "complexity": "O(1)",
        "arguments": [{
                "name": "key",
                "type": "key"
            },
            {
                "name": "DEBUG",
                "type": "string",
                "optional": true
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.QUERYINDEX": {
        "summary": "Get all the keys matching the filter list",
        "complexity": "O(n) where n is the number of time-series that match the filters",
        "arguments": [
            {
                "type": "oneof",
                "arguments": [
                    {
                        "name": "l=v",
                        "pure-token": "l=v"
                    },
                    {
                        "name": "l!=v",
                        "pure-token": "l!=v"
                    },
                    {
                        "name": "l=",
                        "pure-token": "l="
                    },
                    {
                        "name": "l!=",
                        "pure-token": "l!="
                    },
                    {
                        "name": "l=(v1,v2,...)",
                        "pure-token": "l=(v1,v2,...)"
                    },
                    {
                        "name": "l!=(v1,v2,...)",
                        "pure-token": "l!=(v1,v2,...)"
                    }
                ],
                "multiple": true
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    }
}